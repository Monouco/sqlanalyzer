{"reg_users": {"no alias": {"a": "SELECT DISTINCT anonymous_id,                    user_id    FROM mapbox_customer_data.segment_identifies    WHERE dt >= '2018-07-01'      AND anonymous_id IS NOT NULL AND user_id IS NOT NULL ", "b": "SELECT id,           email,           created    FROM mapbox_customer_data.accounts WHERE cast(dt AS DATE) = CURRENT_DATE - INTERVAL '1' DAY ", "c": "SELECT anonymous_id AS anon_id_ad,           context_campaign_name,           min(TIMESTAMP) AS min_exposure    FROM mapbox_customer_data.segment_pages    WHERE dt >= '2018-07-01'      AND context_campaign_name IS NOT NULL    GROUP BY 1, 2", "d": "SELECT DISTINCT anonymous_id AS anon_id_event,                    original_timestamp,                    event,                    context_traits_email    FROM mapbox_customer_data.segment_tracks    WHERE dt >= '2018-07-01'      AND event LIKE 'submitted_%form' AND context_traits_email IS NOT NULL ", "main": "SELECT a.*,\n       b.*,\n       c.*,\n       d.*\nFROM\nLEFT JOIN\nLEFT JOIN\nLEFT JOIN b ON a.user_id = b.id\nc ON a.anonymous_id = c.anon_id_ad\nd ON a.anonymous_id = d.anon_id_event"}, "main": "SELECT *\nFROM\nWHERE context_campaign_name IS NOT NULL ), "}, "non_reg_users": {"no alias": {"a": "SELECT anonymous_id AS anon_id_ad,           context_campaign_name,           min(original_timestamp) AS min_exposure    FROM      (SELECT context_campaign_name,              anonymous_id,              original_timestamp       FROM mapbox_customer_data.segment_pages       WHERE dt >= '2018-07-01'         AND context_campaign_name IS NOT NULL )    GROUP BY 1, 2", "b": "SELECT DISTINCT anonymous_id AS anon_id_event,                    original_timestamp,                    event,                    context_traits_email    FROM mapbox_customer_data.segment_tracks    WHERE dt >= '2018-07-01'      AND event LIKE 'submitted_%form' AND context_traits_email IS NOT NULL ", "main": "SELECT a.*,\n       b.*\nFROM\nLEFT JOIN b ON a.anon_id_ad = b.anon_id_event"}, "main": "SELECT context_campaign_name,\n       min_exposure,\n       event,\n       original_timestamp AS event_timestamp,\n       context_traits_email AS event_email\nFROM\nWHERE anon_id_event IS NOT NULL\n  AND to_unixtime(min_exposure) <= to_unixtime(original_timestamp)\n  AND cast(min_exposure AS DATE) >= cast(original_timestamp AS DATE) - INTERVAL '28' DAY ), "}, "mql_flag": {"no alias": "SELECT email,           min(created_date) created_date,           max(last_mql_date_c) last_mql_date_c,           CASE               WHEN max(last_mql_date_c) IS NOT NULL THEN 1               ELSE 0           END AS mql_flag,           sum(CASE                   WHEN is_deleted = TRUE THEN 1                   ELSE 0               END) AS is_deleted    FROM sales.salesforce_leads    WHERE cast(dt AS DATE) = CURRENT_DATE - INTERVAL '1' DAY    GROUP BY 1", "main": "SELECT email,\n       created_date,\n       last_mql_date_c,\n       mql_flag\nFROM\nWHERE mql_flag = 1\n  AND is_deleted = 0 ), "}, "cleaned_list": "SELECT DISTINCT *\nFROM\n  (SELECT context_campaign_name,\n          min_exposure,\n          'created_an_account' AS event,\n          created AS event_timestamp,\n          email AS event_email\n   FROM reg_users\n   WHERE to_unixtime(min_exposure) <= to_unixtime(created)\n     AND cast(min_exposure AS DATE) >= cast(created AS DATE) - INTERVAL '28' DAY\n   UNION ALL SELECT context_campaign_name,\n                    min_exposure,\n                    event,\n                    original_timestamp AS event_timestamp,\n                    context_traits_email AS event_email\n   FROM reg_users\n   WHERE to_unixtime(min_exposure) <= to_unixtime(original_timestamp)\n     AND cast(min_exposure AS DATE) >= cast(original_timestamp AS DATE) - INTERVAL '28' DAY\n   UNION ALL SELECT *\n   FROM non_reg_users))", "main": "SELECT a.*,\n       b.*\nFROM cleaned_list a\nLEFT JOIN mql_flag b ON a.event_email = b.email"}